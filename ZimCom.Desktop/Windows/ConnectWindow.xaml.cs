using ZimCom.Desktop.ViewModels;

namespace ZimCom.Desktop.Windows;

/// <summary>
///     Interaktionslogik für ConnectWindow.xaml
/// </summary>
public partial class ConnectWindow
{
    /// <summary>
    /// Represents a modal window that allows the user to enter an address and initiate a connection.
    /// </summary>
    public ConnectWindow()
    {
        InitializeComponent();
        DataContext = ViewModel;
        AddressBox.Focus();
    }

    /// <summary>
    /// Gets the view model that provides data and commands for the <see cref="ConnectWindow"/>.
    /// </summary>
    /// <remarks>
    /// The <see cref="ViewModel"/> property is initialized with a new instance of <see cref="ConnectWindowViewModel"/>
    /// when the window is constructed. It serves as the DataContext for the window, allowing XAML bindings
    /// to access properties such as <c>Address</c>, events like <c>ConnectToAddress</c> and commands
    /// generated by the <c>[RelayCommand]</c> attribute.
    /// </remarks>
    public ConnectWindowViewModel ViewModel { get; } = new();
}